/* drivers/input/touchscreen/gt9xx.h
 * 
 * 2010 - 2013 Goodix Technology.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be a reference 
 * to you, when you are integrating the GOODiX's CTP IC into your system, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
 * General Public License for more details.
 * 
 */
/* =======================================================================
 *
 * when        	who         	why                           		comment tag
 *
 * ----------	---------	-------------------------------------	--------------------------
 *  2014-02-14	guofeizhi	support C230W Singapore TP		FEIXUN_SUPPORT_C230W_SI_TP_GUOFEIZHI_001
 *  2014-02-20	guofeizhi	Improve E550 TP	performance		FEIXUN_IMPROVE_E550W_TP_PERFORMANCE_GUOFEIZHI_001
 *  2014-05-08	guofeizhi	enable ESD protect function		FEIXUN_ENABLE_E550W_ESD_PROTECTION_GUOFEIZHI_001
 *
 */
#ifndef _GOODIX_GT9XX_H_
#define _GOODIX_GT9XX_H_

#include <linux/kernel.h>
#include <linux/hrtimer.h>
#include <linux/i2c.h>
#include <linux/input.h>
#include <linux/module.h>
#include <linux/delay.h>
#include <linux/i2c.h>
#include <linux/proc_fs.h>
#include <linux/string.h>
#include <asm/uaccess.h>
#include <linux/vmalloc.h>
#include <linux/interrupt.h>
#include <linux/io.h>
#include <mach/gpio.h>
#include <linux/gpio.h>
#include <linux/earlysuspend.h>
#include <linux/regulator/consumer.h>


//***************************PART1:ON/OFF define*******************************
#define GTP_CUSTOM_CFG        1
#define GTP_CHANGE_X2Y        0
#define GTP_DRIVER_SEND_CFG   1
#define GTP_HAVE_TOUCH_KEY    1
#define GTP_POWER_CTRL_SLEEP  0
#define GTP_ICS_SLOT_REPORT   1

#define GTP_AUTO_UPDATE       0    // auto updated by .bin file as default
#define GTP_HEADER_FW_UPDATE  0    // auto updated by gt9xx_firmware.h, function together with GTP_AUTO_UPDATE

#define GTP_COMPATIBLE_MODE   1   // compatible with GT9XXF

#define GTP_CREATE_WR_NODE    1
//FEIXUN_ENABLE_E550W_ESD_PROTECTION_GUOFEIZHI_001 start
#if defined (CONFIG_PHICOMM_BOARD_E550W)
#define GTP_ESD_PROTECT       1
#else
#define GTP_ESD_PROTECT       0
#endif
//FEIXUN_ENABLE_E550W_ESD_PROTECTION_GUOFEIZHI_001 end
#define GTP_WITH_PEN          0

#define GTP_SLIDE_WAKEUP      0
#define GTP_DBL_CLK_WAKEUP    0     // double-click wakeup, function together with GTP_SLIDE_WAKEUP

#define GTP_DEBUG_ON          0
#define GTP_DEBUG_ARRAY_ON    0
#define GTP_DEBUG_FUNC_ON     0

#if GTP_COMPATIBLE_MODE
typedef enum
{
    CHIP_TYPE_GT9  = 0,
    CHIP_TYPE_GT9F = 1,
} CHIP_TYPE_T;
#endif
#if 0
struct goodix_ts_platform_data {
	int irq_gpio;
	u32 irq_gpio_flags;
	int reset_gpio;
	u32 reset_gpio_flags;
	u32 family_id;
	u32 x_max;
	u32 y_max;
	u32 x_min;
	u32 y_min;
	u32 panel_minx;
	u32 panel_miny;
	u32 panel_maxx;
	u32 panel_maxy;
	bool no_force_update;
	bool i2c_pull_up;
	int gtp_cfg_len;
	u8 *config_data;
};
#endif
struct goodix_ts_data {
    spinlock_t irq_lock;
    struct i2c_client *client;
    struct input_dev  *input_dev;
    struct hrtimer timer;
    struct work_struct  work;
    struct early_suspend early_suspend;
    s32 irq_is_disable;
    s32 use_irq;
    u16 abs_x_max;
    u16 abs_y_max;
    u8  max_touch_num;
    u8  int_trigger_type;
    u8  green_wake_mode;
    u8  enter_update;
    u8  gtp_is_suspend;
    u8  gtp_rawdiff_mode;
    u8  gtp_cfg_len;
    u8  fixed_cfg;
    u8  fw_error;
    u8  pnl_init_error;

#if GTP_ESD_PROTECT
    spinlock_t esd_lock;
    u8  esd_running;
#endif

#if GTP_COMPATIBLE_MODE
    u16 bak_ref_len;
    s32 ref_chk_fs_times;
    s32 clk_chk_fs_times;
    CHIP_TYPE_T chip_type;
    u8 rqst_processing;
    u8 is_950;
#endif

#if defined(CONFIG_PHICOMM_NOTIFIER)
    struct notifier_block bl_nb;
#endif
    volatile bool bl_on;
};

extern u16 show_len;
extern u16 total_len;


//*************************** PART2:TODO define **********************************
// STEP_1(REQUIRED): Define Configuration Information Group(s)
// Sensor_ID Map:
/* sensor_opt1 sensor_opt2 Sensor_ID
    GND         GND         0 
    VDDIO       GND         1 
    NC          GND         2 
    GND         NC/300K     3 
    VDDIO       NC/300K     4 
    NC          NC/300K     5 
*/

#if defined CONFIG_PHICOMM_BOARD_E550W
   // TODO: define your own default or for Sensor_ID == 0 config here. 
   // The predefined one is just a sample config, which is not suitable for your tp in most cases.
   // FEIXUN_IMPROVE_E550W_TP_PERFORMANCE_GUOFEIZHI_001 start
   #define CTP_CFG_GROUP1 {\
	0x00,0xDC,0x01,0x50,0x03,0x02,0x00,0x41,0x01,0x42,\
	0x06,0x00,0x37,0x28,0x03,0x05,0x00,0x00,0x00,0x00,\
	0x00,0x20,0x06,0x24,0x0C,0x64,0x98,0x02,0x03,0xBB,\
	0x7F,0x82,0x82,0x06,0x05,0x0A,0x00,0x42,0x01,0x1D,\
	0x00,0x01,0x00,0x00,0x00,0x00,0x11,0x11,0x3C,0x64,\
	0x28,0x64,0x96,0x94,0xC5,0x02,0x08,0x00,0x00,0x01,\
	0x8C,0x68,0x00,0x86,0x71,0x00,0x80,0x7A,0x00,0x7B,\
	0x84,0x00,0x74,0x90,0x00,0x6E,0x07,0x0C,0x10,0x00,\
	0x81,0x45,0x35,0x6F,0xFF,0x27,0x04,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x05,0x08,\
	0x64,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,\
	0x08,0x09,0x0C,0x0D,0x0E,0x0F,0x10,0x11,0x12,0x13,\
	0x16,0x17,0x18,0x19,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\
	0x00,0x00,0x08,0x0A,0x24,0x26,0x28,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x09,0x0B,0x25,0x27,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0xA0,0xB4,0xAA,0x96,0xFA,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x40,0x40,\
	0x46,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x0A,0x0A,0x00,0x00,0x00,0x00,0x04,0x04,0x04,0x04,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x79,0x01\
   }
   // FEIXUN_IMPROVE_E550W_TP_PERFORMANCE_GUOFEIZHI_001 end

   // TODO: define your config for Sensor_ID == 1 here, if needed
   #define CTP_CFG_GROUP2 {\
   }

   // TODO: define your config for Sensor_ID == 2 here, if needed
   #define CTP_CFG_GROUP3 {\
   }

   // TODO: define your config for Sensor_ID == 3 here, if needed
   #define CTP_CFG_GROUP4 {\
   }

   // TODO: define your config for Sensor_ID == 4 here, if needed
   #define CTP_CFG_GROUP5 {\
   }

   // TODO: define your config for Sensor_ID == 5 here, if needed
   // FEIXUN_IMPROVE_E550W_TP_PERFORMANCE_GUOFEIZHI_001 start
   #define CTP_CFG_GROUP6 {\
	0x00,0xDC,0x01,0x50,0x03,0x02,0x00,0x41,0x01,0x42,\
	0x06,0x00,0x37,0x28,0x03,0x05,0x00,0x00,0x00,0x00,\
	0x00,0x20,0x06,0x24,0x0C,0x64,0x98,0x02,0x03,0xBB,\
	0x7F,0x82,0x82,0x06,0x05,0x0A,0x00,0x42,0x01,0x1D,\
	0x00,0x01,0x00,0x00,0x00,0x00,0x11,0x11,0x3C,0x64,\
	0x28,0x64,0x96,0x94,0xC5,0x02,0x08,0x00,0x00,0x01,\
	0x8C,0x68,0x00,0x86,0x71,0x00,0x80,0x7A,0x00,0x7B,\
	0x84,0x00,0x74,0x90,0x00,0x6E,0x07,0x0C,0x10,0x00,\
	0x81,0x45,0x35,0x6F,0xFF,0x27,0x04,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x05,0x08,\
	0x64,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,\
	0x08,0x09,0x0C,0x0D,0x0E,0x0F,0x10,0x11,0x12,0x13,\
	0x16,0x17,0x18,0x19,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\
	0x00,0x00,0x08,0x0A,0x24,0x26,0x28,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x09,0x0B,0x25,0x27,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0xA0,0xB4,0xAA,0x96,0xFA,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x46,0x40,0x40,\
	0x46,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x0A,0x0A,0x00,0x00,0x00,0x00,0x04,0x04,0x04,0x04,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x79,0x01\
   }
   // FEIXUN_IMPROVE_E550W_TP_PERFORMANCE_GUOFEIZHI_001 end

#else

   // TODO: define your own default or for Sensor_ID == 0 config here. 
   // The predefined one is just a sample config, which is not suitable for your tp in most cases.
   //FEIXUN_SUPPORT_C230W_SI_TP_GUOFEIZHI_001 start
   #define CTP_CFG_GROUP1 {\
	0x42,0xE0,0x01,0x20,0x03,0x02,0x00,0x41,0x01,0x42,\
	0x06,0x00,0x50,0x41,0x03,0x05,0x00,0x00,0x00,0x00,\
	0x11,0x22,0x00,0x20,0x06,0xA8,0xAA,0x02,0x23,0x99,\
	0x7F,0x82,0x82,0x06,0x05,0x08,0x00,0x42,0x01,0x1D,\
	0x00,0x09,0x01,0x01,0x01,0x01,0x55,0x55,0x3C,0x50,\
	0x28,0x6B,0x93,0x94,0xC5,0x02,0x08,0x00,0x00,0x01,\
	0x8C,0x38,0x00,0x86,0x45,0x00,0x80,0x56,0x00,0x7B,\
	0x6A,0x00,0x74,0x84,0x00,0x6E,0x08,0x0D,0x10,0x00,\
	0x81,0x70,0x60,0xFF,0xFF,0x1F,0x04,0x00,0x00,0x1E,\
	0x00,0x01,0x0D,0x0C,0x09,0x0F,0x00,0x00,0x01,0x03,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x08,0x05,\
	0x64,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,\
	0x08,0x09,0x0C,0x0D,0x0E,0x0F,0x10,0x11,0x12,0x13,\
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\
	0x00,0x00,0x08,0x0A,0x24,0x26,0x28,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x09,0x0B,0x25,0x27,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0x96,0xA5,0xA5,0x96,0xFA,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x40,\
	0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x0A,0x06,0x00,0x00,0x00,0x00,0x04,0x04,0x04,0x04,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x5A,0x01\
   }
   //FEIXUN_SUPPORT_C230W_SI_TP_GUOFEIZHI_001 end

   // TODO: define your config for Sensor_ID == 1 here, if needed
   #define CTP_CFG_GROUP2 {\
   }

   // TODO: define your config for Sensor_ID == 2 here, if needed
   #define CTP_CFG_GROUP3 {\
	0x00,0xE0,0x01,0x20,0x03,0x05,0x01,0x01,0x01,0x84,\
	0x14,0x0F,0x4B,0x37,0x03,0x05,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x20,0x01,0x00,0x55,0x03,0x04,0x88,\
	0x3C,0x00,0xDF,0x0B,0x05,0x07,0x00,0x02,0x02,0x1D,\
	0x00,0x01,0x04,0x04,0x06,0x06,0x5D,0xAA,0x50,0x8C,\
	0x00,0x27,0x63,0x54,0x05,0x02,0x02,0x00,0x00,0x01,\
	0xAD,0x2A,0x00,0x92,0x33,0x00,0x7C,0x3E,0x00,0x6B,\
	0x4B,0x00,0x5E,0x5A,0x00,0x5E,0x08,0x0B,0x10,0x00,\
	0x51,0x45,0x30,0xDD,0xD0,0x19,0x04,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x0E,0x0D,0x0C,0x09,0x08,0x07,0x06,0x0F,\
	0x04,0x03,0x02,0x01,0x00,0x05,0x10,0x11,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\
	0x00,0x00,0x08,0x09,0x0A,0x24,0x26,0x27,0x28,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0xFF,0xFF,0x0B,0x25,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0x80,0x80,0x80,0x80,0xFF,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x71,0x01\
    }

   // TODO: define your config for Sensor_ID == 3 here, if needed
   // for 910
   #define CTP_CFG_GROUP4 {\
	0x00,0xE0,0x01,0x20,0x03,0x05,0x05,0x01,0x01,0x08,\
	0x14,0x05,0x37,0x28,0x03,0x05,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x04,0x88,\
	0x63,0x23,0xD3,0x07,0x05,0x07,0x00,0x9A,0x01,0x1D,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x0B,0x10,0x00,\
	0xF0,0x30,0x20,0xFF,0xFF,0x27,0x04,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x0E,0x0F,0x0C,0x0D,0x08,0x09,0x06,0x07,\
	0x04,0x05,0x02,0x03,0x00,0x01,0x10,0x11,0xFF,0xFF,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x08,0x09,0x0A,0x24,0x26,0x27,0x28,0xFF,\
	0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0xFF,0xFF,0x0B,0x25,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0x80,0x80,0x80,0x80,0xFF,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0xDA,0x01\
    }

   // TODO: define your config for Sensor_ID == 4 here, if needed
   #define CTP_CFG_GROUP5 {\
	0x42,0xE0,0x01,0x20,0x03,0x02,0x00,0x41,0x01,0x42,\
	0x06,0x00,0x50,0x41,0x03,0x05,0x00,0x00,0x00,0x00,\
	0x11,0x22,0x06,0x20,0x06,0xA8,0xAA,0x02,0x23,0x99,\
	0x7F,0x82,0x82,0x06,0x05,0x08,0x00,0x41,0x01,0x1D,\
	0x00,0x09,0x01,0x01,0x01,0x01,0x11,0x11,0x3C,0x50,\
	0x28,0x6B,0x93,0x94,0xC5,0x02,0x08,0x00,0x00,0x01,\
	0x8C,0x38,0x00,0x86,0x45,0x00,0x80,0x56,0x00,0x7B,\
	0x6A,0x00,0x74,0x84,0x00,0x6E,0x08,0x0D,0x10,0x00,\
	0x81,0x70,0x60,0xFF,0xFF,0x1F,0x04,0x00,0x00,0x1E,\
	0x00,0x01,0x0D,0x0C,0x09,0x0F,0x00,0x00,0x01,0x03,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x08,0x05,\
	0x64,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,\
	0x08,0x09,0x0C,0x0D,0x0E,0x0F,0x10,0x11,0x12,0x13,\
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\
	0x00,0x00,0x08,0x0A,0x24,0x26,0x28,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x00,0x00,0x00,0x09,0x0B,0x25,0x27,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\
	0xFF,0xFF,0xFF,0xFF,0x96,0xA5,0xA5,0x96,0xFA,0x00,\
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x40,\
	0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
	0x0A,0x06,0x00,0x00,0x00,0x00,0x04,0x04,0x04,0x04,\
	0x00,0x00,0x00,0x00,0x00,0x00,0xDD,0x01\
   }

   // TODO: define your config for Sensor_ID == 5 here, if needed
#define CTP_CFG_GROUP6 {\
        0x42,0xE0,0x01,0x20,0x03,0x02,0x00,0x01,0x02,0x54,\
        0x00,0x00,0x3F,0x37,0x03,0x05,0x01,0x01,0x00,0x00,\
        0x00,0x00,0x00,0x20,0x04,0x76,0x77,0x02,0x03,0x88,\
        0x7F,0x82,0x82,0x06,0x05,0x07,0x00,0x22,0x01,0x1D,\
        0x00,0x01,0x03,0x03,0x03,0x03,0x5D,0xAA,0x64,0x84,\
        0x28,0x6B,0x93,0x54,0xC5,0x02,0x06,0x00,0x00,0x01,\
        0x8C,0x38,0x00,0x86,0x45,0x00,0x80,0x56,0x00,0x7B,\
        0x6A,0x00,0x74,0x84,0x00,0x6E,0x08,0x0D,0x10,0x00,\
        0x81,0x70,0x60,0xFF,0xFF,0x1F,0x04,0x00,0x00,0x1E,\
        0x00,0x01,0x0D,0x0C,0x09,0x0F,0x00,0x00,0x01,0x03,\
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
        0x00,0x00,0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,\
        0x08,0x09,0x0C,0x0D,0x0E,0x0F,0x10,0x11,0xFF,0xFF,\
        0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\
        0x00,0x00,0x08,0x0A,0x24,0x26,0x28,0xFF,0xFF,0xFF,\
        0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,\
        0x00,0x00,0x00,0x09,0x0B,0x25,0x27,0xFF,0xFF,0xFF,\
        0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\
        0xFF,0xFF,0xFF,0xFF,0x96,0xB4,0xAF,0x96,0xFF,0x00,\
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x40,\
        0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
        0x04,0x04,0x00,0x00,0x00,0x00,0x04,0x04,0x04,0x04,\
        0x00,0x00,0x00,0x00,0x00,0x00,0xA3,0x01\
    }

#endif 

// STEP_2(REQUIRED): Customize your I/O ports & I/O operations
#define GTP_RST_PORT    0
#define GTP_INT_PORT    1
#define GTP_INT_IRQ     gpio_to_irq(GTP_INT_PORT)
//#define GTP_INT_CFG     S3C_GPIO_SFN(0xF)

#define GTP_GPIO_AS_INPUT(pin)          do{\
                                            gpio_direction_input(pin);\
                                       }while(0)
#define GTP_GPIO_GET_VALUE(pin)         gpio_get_value(pin)
#define GTP_GPIO_OUTPUT(pin,level)      gpio_direction_output(pin,level)
#define GTP_GPIO_REQUEST(pin, label)    gpio_request(pin, label)
#define GTP_GPIO_FREE(pin)              gpio_free(pin)
#define GTP_IRQ_TAB                     {IRQ_TYPE_EDGE_RISING, IRQ_TYPE_EDGE_FALLING, IRQ_TYPE_LEVEL_LOW, IRQ_TYPE_LEVEL_HIGH}

// STEP_3(optional): Specify your special config info if needed
#if GTP_CUSTOM_CFG
 
#if defined CONFIG_PHICOMM_BOARD_E550W
	#define GTP_MAX_HEIGHT   848
	#define GTP_MAX_WIDTH    476
#else
	#define GTP_MAX_HEIGHT   800
	#define GTP_MAX_WIDTH    480
#endif


  #define GTP_INT_TRIGGER  0            // 0: Rising 1: Falling
#else
  #define GTP_MAX_HEIGHT   4096
  #define GTP_MAX_WIDTH    4096
  #define GTP_INT_TRIGGER  1
#endif
#define GTP_MAX_TOUCH         5
#define GTP_ESD_CHECK_CIRCLE  2000      // jiffy: ms

// STEP_4(optional): If keys are available and reported as keys, config your key info here                             
#if GTP_HAVE_TOUCH_KEY
	#define GTP_KEY_TAB  {KEY_MENU, KEY_HOMEPAGE,KEY_BACK}
#endif

//***************************PART3:OTHER define*********************************
#define GTP_DRIVER_VERSION    "V2.0<2013/08/06>"
#define GTP_I2C_NAME          "Goodix-TS"
#define GTP_POLL_TIME         10     // jiffy: ms
#define GTP_ADDR_LENGTH       2
#define GTP_CONFIG_MIN_LENGTH 186
#define GTP_CONFIG_MAX_LENGTH 240
#define FAIL                  0
#define SUCCESS               1
#define SWITCH_OFF            0
#define SWITCH_ON             1

//******************** For GT9XXF Start **********************//
#define GTP_REG_BAK_REF                 0x99D0
#define GTP_REG_MAIN_CLK                0x8020
#define GTP_REG_CHIP_TYPE               0x8000
#define GTP_REG_HAVE_KEY                0x804E
#define GTP_REG_MATRIX_DRVNUM           0x8069     
#define GTP_REG_MATRIX_SENNUM           0x806A

#define GTP_FL_FW_BURN              0x00
#define GTP_FL_ESD_RECOVERY         0x01
#define GTP_FL_READ_REPAIR          0x02

#define GTP_BAK_REF_SEND                0
#define GTP_BAK_REF_STORE               1
#define CFG_LOC_DRVA_NUM                29
#define CFG_LOC_DRVB_NUM                30
#define CFG_LOC_SENS_NUM                31

#define GTP_CHK_FW_MAX                  40
#define GTP_CHK_FS_MNT_MAX              300
#define GTP_BAK_REF_PATH                "/data/gtp_ref.bin"
#define GTP_MAIN_CLK_PATH               "/data/gtp_clk.bin"
#define GTP_RQST_CONFIG                 0x01
#define GTP_RQST_BAK_REF                0x02
#define GTP_RQST_RESET                  0x03
#define GTP_RQST_MAIN_CLOCK             0x04
#define GTP_RQST_RESPONDED              0x00
#define GTP_RQST_IDLE                   0xFF

//******************** For GT9XXF End **********************//
// Registers define
#define GTP_READ_COOR_ADDR    0x814E
#define GTP_REG_SLEEP         0x8040
#define GTP_REG_SENSOR_ID     0x814A
#define GTP_REG_CONFIG_DATA   0x8047
#define GTP_REG_VERSION       0x8140

#define RESOLUTION_LOC        3
#define TRIGGER_LOC           8

#define CFG_GROUP_LEN(p_cfg_grp)  (sizeof(p_cfg_grp) / sizeof(p_cfg_grp[0]))
// Log define
#define GTP_INFO(fmt,arg...)           printk("<<-GTP-INFO->> "fmt"\n",##arg)
#define GTP_ERROR(fmt,arg...)          printk("<<-GTP-ERROR->> "fmt"\n",##arg)
#define GTP_DEBUG(fmt,arg...)          do{\
                                         if(GTP_DEBUG_ON)\
                                         printk("<<-GTP-DEBUG->> [%d]"fmt"\n",__LINE__, ##arg);\
                                       }while(0)
#define GTP_DEBUG_ARRAY(array, num)    do{\
                                         s32 i;\
                                         u8* a = array;\
                                         if(GTP_DEBUG_ARRAY_ON)\
                                         {\
                                            printk("<<-GTP-DEBUG-ARRAY->>\n");\
                                            for (i = 0; i < (num); i++)\
                                            {\
                                                printk("%02x   ", (a)[i]);\
                                                if ((i + 1 ) %10 == 0)\
                                                {\
                                                    printk("\n");\
                                                }\
                                            }\
                                            printk("\n");\
                                        }\
                                       }while(0)
#define GTP_DEBUG_FUNC()               do{\
                                         if(GTP_DEBUG_FUNC_ON)\
                                         printk("<<-GTP-FUNC->> Func:%s@Line:%d\n",__func__,__LINE__);\
                                       }while(0)
#define GTP_SWAP(x, y)                 do{\
                                         typeof(x) z = x;\
                                         x = y;\
                                         y = z;\
                                       }while (0)

//*****************************End of Part III********************************

#endif /* _GOODIX_GT9XX_H_ */
